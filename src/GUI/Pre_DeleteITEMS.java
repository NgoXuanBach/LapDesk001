/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DTO.Item;
import DTO.Supplier;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ngoba
 */
public final class Pre_DeleteITEMS extends javax.swing.JFrame {

    /**
     * Creates new form Pre_DeleteITEMS
     */
    ArrayList<Item> listitem;
    ArrayList<Supplier> listsup;

    public Pre_DeleteITEMS() {
        initComponents();
        load111();
        loaditem111();
        loaditem222();
        resetjtextfile();
        setResizable(false);

    }

    public void loaditem111() {
        try {
            listitem = DAO.ItemDAO.getAllItem111();
            listsup = DAO.supplierDAO.getAllSupplier333();
            Vector header = new Vector();
            header.add("ItemCode");
            header.add("ItemName");
            header.add("Supplier");
            header.add("Unit");
            header.add("Price");
            Vector data = new Vector();
            for (Item item : listitem) {
                Vector row = new Vector();
                String nameSup = getNameSup(item.getSupCode());
                row.add(item.getItemCode());
                row.add(item.getItemName());
                row.add(item.getSupCode() + '-' + nameSup);
                row.add(item.getUnit());
                row.add(item.getPrice());
                data.add(row);
            }
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setDataVector(data, header);
        } catch (Exception e) {
            e.getMessage();
        }
    }

    String getNameSup(String supCode) {
        for (Supplier supplier : listsup) {
            if (supCode.equalsIgnoreCase(supplier.getCode())) {
                return supplier.getName();
            }
        }
        return null;
    }

    public void loaditem222() {
        try {
            if (!listitem.isEmpty()) {
                listitem = DAO.ItemDAO.getAllItem111();
                listsup = DAO.supplierDAO.getAllSupplier333();
                Vector header = new Vector();
                header.add("ItemCode");
                header.add("ItemName");
                header.add("Supplier");
                header.add("Unit");
                header.add("Price");
                Vector data = new Vector();
                for (Item item : listitem) {
                    Vector row = new Vector();
                    String nameSup = getNameSup(item.getSupCode());
                    row.add(item.getItemCode());
                    row.add(item.getItemName());
                    row.add(item.getSupCode() + '-' + nameSup);
                    row.add(item.getUnit());
                    row.add(item.getPrice());
                    data.add(row);
                }
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setDataVector(data, header);
            } else {
                JOptionPane.showMessageDialog(this, "List is Null");
            }
        } catch (Exception e) {
            e.getMessage();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonDELETE1 = new javax.swing.JButton();
        jButtonPreDelete = new javax.swing.JButton();
        jLabelSTUDENTID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelSTUDENTPHONE = new javax.swing.JLabel();
        jLabelEMAIL = new javax.swing.JLabel();
        jLabelAddress = new javax.swing.JLabel();
        jLabelDAYOFBIRTH = new javax.swing.JLabel();
        jLabelSTATUS = new javax.swing.JLabel();
        jTextFielditemCode = new javax.swing.JTextField();
        jTextFileITEMNAME = new javax.swing.JTextField();
        jTextFieldUNIT = new javax.swing.JTextField();
        jTextFieldSTATUS = new javax.swing.JTextField();
        jcheckStudentID = new javax.swing.JLabel();
        jButtonGetALL = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldPRICE = new javax.swing.JTextField();
        jCheckBoxSUPPLYING = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("THE LIST OF ITEMS");

        jButtonDELETE1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonDELETE1.setForeground(new java.awt.Color(255, 0, 0));
        jButtonDELETE1.setText("DELETE");
        jButtonDELETE1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELETE1ActionPerformed(evt);
            }
        });

        jButtonPreDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonPreDelete.setForeground(new java.awt.Color(255, 0, 0));
        jButtonPreDelete.setText("Pre_DELETE");
        jButtonPreDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreDeleteActionPerformed(evt);
            }
        });

        jLabelSTUDENTID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelSTUDENTID.setText("ItemCode");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("ItemName");

        jLabelSTUDENTPHONE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelSTUDENTPHONE.setText("Supplier");

        jLabelEMAIL.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelEMAIL.setText("Unit");

        jLabelAddress.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelAddress.setText("Price");

        jLabelDAYOFBIRTH.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelDAYOFBIRTH.setText("Supplying");

        jLabelSTATUS.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelSTATUS.setText("Status");

        jTextFielditemCode.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFielditemCode.setForeground(new java.awt.Color(255, 0, 0));

        jTextFileITEMNAME.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFileITEMNAME.setForeground(new java.awt.Color(255, 0, 0));

        jTextFieldUNIT.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldUNIT.setForeground(new java.awt.Color(255, 0, 0));

        jTextFieldSTATUS.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldSTATUS.setForeground(new java.awt.Color(255, 0, 0));

        jcheckStudentID.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jcheckStudentID.setForeground(new java.awt.Color(255, 0, 0));

        jButtonGetALL.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonGetALL.setForeground(new java.awt.Color(255, 0, 0));
        jButtonGetALL.setText("GetAll");
        jButtonGetALL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGetALLActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextFieldPRICE.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldPRICE.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonDELETE1)
                        .addGap(46, 46, 46)
                        .addComponent(jButtonPreDelete)
                        .addGap(36, 36, 36)
                        .addComponent(jButtonGetALL, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelSTUDENTID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelSTUDENTPHONE)
                    .addComponent(jLabelEMAIL)
                    .addComponent(jLabelAddress)
                    .addComponent(jLabelDAYOFBIRTH)
                    .addComponent(jLabelSTATUS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcheckStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxSUPPLYING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextFileITEMNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFielditemCode, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                                .addComponent(jTextFieldUNIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldSTATUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldPRICE, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(421, 421, 421))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonDELETE1, jButtonPreDelete});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, jLabelAddress, jLabelDAYOFBIRTH, jLabelEMAIL, jLabelSTATUS, jLabelSTUDENTID, jLabelSTUDENTPHONE});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextFieldSTATUS, jTextFieldUNIT, jTextFielditemCode, jTextFileITEMNAME});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDELETE1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonPreDelete)
                                .addComponent(jButtonGetALL)))
                        .addGap(81, 81, 81))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFielditemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcheckStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelSTUDENTID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFileITEMNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelSTUDENTPHONE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldUNIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEMAIL))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelAddress)
                            .addComponent(jTextFieldPRICE, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxSUPPLYING)
                            .addComponent(jLabelDAYOFBIRTH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSTATUS)
                            .addComponent(jLabelSTATUS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonDELETE1, jButtonPreDelete});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, jLabelAddress, jLabelDAYOFBIRTH, jLabelEMAIL, jLabelSTUDENTPHONE});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextFieldSTATUS, jTextFieldUNIT, jTextFielditemCode, jTextFileITEMNAME});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int pos = jTable1.getSelectedRow();
        resetJtext();
        //String date = new SimpleDateFormat("dd/MM/yyyy").format(listitem.get(pos).getDayOfBirth());
        if (pos >= 0) {
            jTextFielditemCode.setText("" + jTable1.getValueAt(pos, 0));
            jTextFileITEMNAME.setText("" + jTable1.getValueAt(pos, 1));
            jComboBox1.setSelectedItem("" + jTable1.getValueAt(pos, 2));
            jTextFieldUNIT.setText("" + jTable1.getValueAt(pos, 3));
            jTextFieldPRICE.setText("" + listitem.get(pos).getPrice());
            jCheckBoxSUPPLYING.setSelected(listitem.get(pos).isSupplying());
            jTextFieldSTATUS.setText("" + listitem.get(pos).getStatus());
            jButtonDELETE1.setEnabled(true);
            jButtonPreDelete.setEnabled(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonDELETE1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELETE1ActionPerformed

        int pos = jTable1.getSelectedRow();
        String itemcode = jTextFielditemCode.getText();
         String[] supcode = jComboBox1.getSelectedItem().toString().split("-");
        if (pos >= 0) {
            try {
                int a = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete?", "confirm", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (a == JOptionPane.YES_OPTION) {
                    int result = DAO.ItemDAO.DeleteItemTHAT(itemcode,supcode[0]);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Deleted successfully");
                        loaditem111();
                        loaditem222();
                        jTextFielditemCode.setEnabled(false);
                        jTextFielditemCode.setText("");
                        jTextFileITEMNAME.setEnabled(false);
                        jTextFileITEMNAME.setText("");
                        jTextFieldUNIT.setEnabled(false);
                        jTextFieldUNIT.setText("");
                        jCheckBoxSUPPLYING.setEnabled(false);
                        jCheckBoxSUPPLYING.setText("");
                        jTextFieldPRICE.setEnabled(false);
                        jTextFieldPRICE.setText("");
                        jComboBox1.setEnabled(false);
                        jButtonDELETE1.setEnabled(false);
                        jButtonPreDelete.setEnabled(false);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Delete faileds");

            }
        } else {
            JOptionPane.showMessageDialog(null, "Select to delete");

        }
    }//GEN-LAST:event_jButtonDELETE1ActionPerformed

    private void jButtonPreDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreDeleteActionPerformed
        int pos = jTable1.getSelectedRow();
        String studentid = jTextFielditemCode.getText();
        String supcode = listitem.get(pos).getSupCode();
        if (pos >= 0) {
            try {
                int a = JOptionPane.showConfirmDialog(this, "Are you sure you want to Pre_DELETE?", "confirm", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (a == JOptionPane.YES_OPTION) {
                    int result = DAO.ItemDAO.Pre_DeleteItems(studentid, supcode);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Pre_DELETE successfully");
                        loaditem111();
                        loaditem222();
//                        resetjtextfile();
                        jTextFielditemCode.setEnabled(false);
                        jTextFielditemCode.setText("");
                        jTextFileITEMNAME.setEnabled(false);
                        jTextFileITEMNAME.setText("");
                        jTextFieldUNIT.setEnabled(false);
                        jTextFieldUNIT.setText("");
                        jButtonDELETE1.setEnabled(false);
                        jButtonPreDelete.setEnabled(false);

                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Pre_DELETE faileds");

            }
        } else {
            JOptionPane.showMessageDialog(null, "Select to Pre_DELETE");

        }

    }//GEN-LAST:event_jButtonPreDeleteActionPerformed

    private void jButtonGetALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetALLActionPerformed
        load111();
        loaditem111();
        loaditem222();
        jTextFielditemCode.setEnabled(false);
        jTextFielditemCode.setText("");
        jTextFileITEMNAME.setEnabled(false);
        jTextFileITEMNAME.setText("");
        jTextFieldUNIT.setEnabled(false);
        jTextFieldUNIT.setText("");
        jButtonDELETE1.setEnabled(false);
        jButtonPreDelete.setEnabled(false);
        jTextFieldPRICE.setText("");
        jTextFieldPRICE.setEnabled(false);
    }//GEN-LAST:event_jButtonGetALLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pre_DeleteITEMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pre_DeleteITEMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pre_DeleteITEMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pre_DeleteITEMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pre_DeleteITEMS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDELETE1;
    private javax.swing.JButton jButtonGetALL;
    private javax.swing.JButton jButtonPreDelete;
    private javax.swing.JCheckBox jCheckBoxSUPPLYING;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelAddress;
    private javax.swing.JLabel jLabelDAYOFBIRTH;
    private javax.swing.JLabel jLabelEMAIL;
    private javax.swing.JLabel jLabelSTATUS;
    private javax.swing.JLabel jLabelSTUDENTID;
    private javax.swing.JLabel jLabelSTUDENTPHONE;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldPRICE;
    private javax.swing.JTextField jTextFieldSTATUS;
    private javax.swing.JTextField jTextFieldUNIT;
    private javax.swing.JTextField jTextFielditemCode;
    private javax.swing.JTextField jTextFileITEMNAME;
    private javax.swing.JLabel jcheckStudentID;
    // End of variables declaration//GEN-END:variables
public String getNameSupplier(String code) {
        for (Supplier x : listsup) {
            if (code.equals(x.getCode().trim())) {
                return x.getName();
            }
        }
        return null;
    }
    private void resetJtext() {
        jTextFielditemCode.setEnabled(false);
        jTextFileITEMNAME.setEnabled(true);
        jTextFileITEMNAME.setEditable(false);
        jTextFieldPRICE.setEnabled(true);
        jTextFieldPRICE.setEditable(false);
        jTextFieldUNIT.setEnabled(true);
        jTextFieldUNIT.setEditable(false);
        // jComboBoxMajorCode.setEditable(false);
        jButtonDELETE1.setEnabled(true);
        jButtonPreDelete.setEnabled(true);

    }

    void load111() {
        try {
            listsup = DAO.supplierDAO.getAllSupplier();
            DefaultComboBoxModel cb = new DefaultComboBoxModel();
            for (Supplier dto : listsup) {
                cb.addElement(dto.getCode() + '-' + dto.getName());
            }
            jComboBox1.setModel(cb);
        } catch (Exception e) {
            e.getMessage();
        }
    }

    private void resetjtextfile() {
        jTextFielditemCode.setEnabled(false);
        jTextFielditemCode.setText("");
        jTextFileITEMNAME.setEnabled(false);
        jTextFileITEMNAME.setText("");

        jTextFieldUNIT.setEnabled(false);
        jTextFieldUNIT.setText("");

        jTextFieldSTATUS.setEnabled(false);
        jTextFieldSTATUS.setEditable(false);
        jTextFieldSTATUS.setText("");
//        jComboBoxMajorCode.setSelectedIndex(-1);
        jButtonDELETE1.setEnabled(false);
        jButtonPreDelete.setEnabled(false);
    }

}
